{
    "source_documents": [
        {
            "id": null,
            "metadata": {
                "source": "C++ in 100 Seconds C++ or C-plus-plus or Cpp is an extremely popular object-oriented programming language. Created in 1979, today it powers game engines, databases, compilers, embedded systems, desktop software, and much of our software infrastructure. \n\n#programming #compsci #100SecondsOfCode\n\n\ud83d\udd17 Resources\n\nMicrosoft Docs https://docs.microsoft.com/en-us/cpp/\n Bjarne Stroustrup Homepage https://www.stroustrup.com/\nC in 100 Seconds https://youtu.be/U3aXWizDbQ4\nC# in 100 Seconds https://youtu.be/ravLFzIguCM\n\n\ud83d\udd25 Get More Content - Upgrade to PRO\n\nUpgrade to Fireship PRO at https://fireship.io/pro\nUse code lORhwXd2 for 25% off your first payment. \n\n\ud83c\udfa8 My Editor Settings\n\n- Atom One Dark \n- vscode-icons\n- Fira Code Font\n\n\ud83d\udd16 Topics Covered\n\n- What is C++?\n- C++ basics tutorial\n- Who invented C++?\n- What is C++ used for?\n- What is a smart pointer?\n- C++ vs C\n- Object oriented programming basics Published at 2022-02-07T15:34:25Z"
            },
            "page_content": "C++ in 100 Seconds C++ or C-plus-plus or Cpp is an extremely popular object-oriented programming language. Created in 1979, today it powers game engines, databases, compilers, embedded systems, desktop software, and much of our software infrastructure. \n\n#programming #compsci #100SecondsOfCode\n\n\ud83d\udd17 Resources\n\nMicrosoft Docs https://docs.microsoft.com/en-us/cpp/\n Bjarne Stroustrup Homepage https://www.stroustrup.com/\nC in 100 Seconds https://youtu.be/U3aXWizDbQ4\nC# in 100 Seconds https://youtu.be/ravLFzIguCM\n\n\ud83d\udd25 Get More Content - Upgrade to PRO\n\nUpgrade to Fireship PRO at https://fireship.io/pro\nUse code lORhwXd2 for 25% off your first payment. \n\n\ud83c\udfa8 My Editor Settings\n\n- Atom One Dark \n- vscode-icons\n- Fira Code Font\n\n\ud83d\udd16 Topics Covered\n\n- What is C++?\n- C++ basics tutorial\n- Who invented C++?\n- What is C++ used for?\n- What is a smart pointer?\n- C++ vs C\n- Object oriented programming basics Published at 2022-02-07T15:34:25Z",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "C++ Programming Course - Beginner to Advanced Learn modern C++ 20 programming in this comprehensive course.\n\n\ud83d\udcbb Source code: https://github.com/rutura/The-C-20-Masterclass-Source-Code\n\n\u270f\ufe0f Course developed by Daniel Gakwaya. Check out his YouTube channel: https://www.youtube.com/channel/UCUYUFiuJ5XZ3JYtbq5dXRKQ\n\ud83d\udc26 Twitter: https://twitter.com/learnqtguide\n\ud83d\udd17 Want more from Daniel? https://www.learnqt.guide/udemy-discounted-9/\n\ud83d\udd17 Join Daniel's discord server for support: https://discord.com/invite/PcATcraESW\n\n\u2b50\ufe0f Course Contents \u2b50\n(0:00:00) Introduction\n\n(0:04:32) Chapter 1: Setting up the tools\nTools\nInstalling C++ Compilers on Windows\nInstalling VS Code on Windows\nConfiguring Visual Studio Code for C++ on Windows\nInstalling C++ Compilers on Linux\nInstalling Visual Studio Code on Linux\nConfiguring Visual Studio Code for C++ on Linux\nInstalling C++ Compilers on MacOs\nInstalling Visual Studio Code on MacOs\nConfiguring Visual Studio Code for C++ on MacOs\nOnline Compilers\n\n(1:43:01) Chapter 2: Diving in\nYour First C++ Program\nComments\nErrors and Warnings\nStatements and Functions\nData input and output\nC++ Program Execution Model\nC++ core language Vs Standard library Vs STL\n\n(3:00:47) Chapter 3: Variables and data types\nVariables and data types Introduction\nNumber Systems\nInteger types : Decimals and Integers\nInteger Modifiers\nFractional Numbers\nBooleans\nCharacters And Text\nAuto\nAssignments\nVariables and data types summary\n\n(4:46:46) Chapter 4: Operations on Data\nIntroduction on Data operations\nBasic Operations\nPrecedence and Associativity\nPrefix/Postfix Increment & Decrement\nCompound Assignment Operators\nRelational Operators\nLogical Operators\nOutput formatting\nNumeric Limits\nMath Functions\nWeird Integral Types\nData Operations Summary\n\n(7:01:58) Chapter 5: Flow Control\nFlow Control Introduction\nIf Statements\nElse If\nSwitch\nTernary Operators\nFlow Control Summary\n\n(7:53:49) Chapter 6: Loops\nLoops Introduction\nFor Loop\nWhile Loop\nDo While Loop\n\n(8:47:08) Chapter 7: Arrays\nIntroduction to Arrays\nDeclaring and using arrays\nSize of an array\nArrays of characters\nArray Bounds\n\n(9:53:23) Chapter 8: Pointers\nIntroduction to Pointers\nDeclaring and using pointers\nPointer to char\nProgram Memory Map Revisited\nDynamic Memory Allocation\nDangling Pointers\nWhen new Fails\nNull Pointer Safety\nMemory Leaks\nDynamically allocated arrays\n\n(12:11:04) Chapter 9: References\nIntroduction to References\nDeclaring and using references\nComparing pointers and references\nReferences and const\n\n(12:44:29) Chapter 10: Character Manipulation and Strings\nIntroduction to Strings\nCharacter Manipulation\nC-string manipulation\nC-String concatenation and copy\nIntroducing std::string\nDeclaring and using std::string\n\n(14:12:47) Chapter 11: Functions\nThe One Definition Rule\nFirst Hand on C++ Functions\nFunction Declaration and Function Definitions\nMultiple Files - Compilation Model Revisited\nPass by value\nPass by pointer\nPass by reference\n\n(16:03:20) Chapter 12: Getting Things out of functions\nIntroduction to getting things out of functions\nInput and output parameters\nReturning from functions by value\n\n(16:32:35) Chapter 13: Function Overloading\nFunction Overloading Introduction\nOverloading with different parameters\n\n(16:49:00) Chapter 14: Lambda functions\nIntro to Lambda Functions\nDeclaring and using lambda functions\nCapture lists\nCapture all in context\nSummary\n\n(17:40:08) Chapter 15: Function Templates\nIntro to function templates\nTrying out function templates\nTemplate type deduction and explicit arguments\nTemplate parameters by reference\nTemplate specialization\n\n(19:04:31) Chapter 16: C++20 Concepts Crash course\nIntro to C++20 Concepts\nUsing C++20 Concepts\nBuilding your own C++20 Concepts\nZooming in on the requires clause\nCombining C++20 Concepts\nC++20 Concepts and auto\n\n(20:15:40) Chapter 17: Classes\nIntro to classes\nYour First Class\nC++ Constructors\nDefaulted constructors\nSetters and Getters\nClass Across Multiple Files\nArrow pointer call notation\nDestructors\nOrder of Constructor Destructor Calls\nThe this Pointer\nstruct\nSize of objects\n\n(22:52:43) Chapter 18: Inheritance\nIntroduction to Inheritance\nFirst try on Inheritance\nProtected members\nBase class access specifiers : Zooming in\nClosing in on Private Inheritance\nResurrecting Members Back in Context\nDefault Constructors with Inheritance\nCustom Constructors With Inheritance\nCopy Constructors with Inheritance\nInheriting Base Constructors\nInheritance and Destructors\nReused Symbols in Inheritance\n\n(26:21:03) Chapter 19: Polymorphism\nIntroduction to Polymorphism\nStatic Binding with Inheritance\nDynamic binding with virtual functions\nSize of polymorphic objects and slicing\nPolymorphic objects stored in collections (array)\nOverride\nOverloading, overriding and function hiding\nInheritance and Polymorphism at different levels\nInheritance and polymorphism with static members\nFinal\nVirtual functions with default arguments\nVirtual Destructors\nDynamic casts\nPolymorphic Functions and Destructors\nPure virtual functions and abstract classes\nAbstract Classes as Interfaces Published at 2022-02-17T14:45:42Z"
            },
            "page_content": "C++ Programming Course - Beginner to Advanced Learn modern C++ 20 programming in this comprehensive course.\n\n\ud83d\udcbb Source code: https://github.com/rutura/The-C-20-Masterclass-Source-Code\n\n\u270f\ufe0f Course developed by Daniel Gakwaya. Check out his YouTube channel: https://www.youtube.com/channel/UCUYUFiuJ5XZ3JYtbq5dXRKQ\n\ud83d\udc26 Twitter: https://twitter.com/learnqtguide\n\ud83d\udd17 Want more from Daniel? https://www.learnqt.guide/udemy-discounted-9/\n\ud83d\udd17 Join Daniel's discord server for support: https://discord.com/invite/PcATcraESW\n\n\u2b50\ufe0f Course Contents \u2b50\n(0:00:00) Introduction\n\n(0:04:32) Chapter 1: Setting up the tools\nTools\nInstalling C++ Compilers on Windows\nInstalling VS Code on Windows\nConfiguring Visual Studio Code for C++ on Windows\nInstalling C++ Compilers on Linux\nInstalling Visual Studio Code on Linux\nConfiguring Visual Studio Code for C++ on Linux\nInstalling C++ Compilers on MacOs\nInstalling Visual Studio Code on MacOs\nConfiguring Visual Studio Code for C++ on MacOs\nOnline Compilers\n\n(1:43:01) Chapter 2: D",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "C++ Tutorial for Beginners - Learn C++ in 1 Hour Learn C++ basics in 1 hour! \ud83d\ude80 This beginner-friendly tutorial is your fast start for this powerful language.\n\n\ud83d\ude80 Ready for a deep dive?\n- Check out my complete C++ course: https://mosh.link/cpp-course\n- Subscribe for more awesome content: https://goo.gl/6PYaGF\n\n\ud83d\udcd5 Get the FREE goodies:\n- C++ cheat sheet & summary notes: https://mosh.link/cpp-cheatsheet\n\n\u270b Stay connected:\n- Twitter: https://twitter.com/moshhamedani\n- Facebook: https://www.facebook.com/programmingwithmosh/\n- Instagram: https://www.instagram.com/codewithmosh.official/\n- LinkedIn: https://www.linkedin.com/school/codewithmosh/\n\n\ud83d\udcd6 TABLE OF CONTENT\n0:00:00 Course Introduction\n0:00:56 Introduction to C++\n0:04:14 Popular IDEs\n0:06:11 Your First C++ Program\n0:13:36 Compiling and Running a C++ Program \n0:16:01 Changing the Theme\n0:17:16 Course Structure\n0:18:48 Cheat Sheet\n0:19:20 Section 1: The Basics\n0:19:52 Variables\n0:26:00 Constants\n0:27:28 Naming Conventions\n0:30:25 Mathematical Expressions\n0:36:39 Order of Operators\n0:39:49 Writing Output to the Console\n0:49:06 Reading from the Console\n0:53:41 Working with the Standard Library \n0:58:19 Comments\n1:00:51 Introduction to Fundamental Data Types \n1:01:41 Section 2: Fundamental Data Types\n1:04:45 Initializing Variables\n1:09:29 Working with Numbers\n1:13:03 Narrowing\n1:15:17 Generating Random Numbers\n\n\ud83d\udca1 Why C++?\n- It's a high-performance language used in gaming, systems programming, and more.\n- Great for learning core programming concepts.\n\n\ud83d\udc49 This tutorial is perfect for you if:\n- You're a complete beginner.\n- You want a fast and practical intro to C++.\n- You're aiming for a career where C++ is valuable.\n\n#coding #programming Published at 2022-08-10T16:00:12Z"
            },
            "page_content": "C++ Tutorial for Beginners - Learn C++ in 1 Hour Learn C++ basics in 1 hour! \ud83d\ude80 This beginner-friendly tutorial is your fast start for this powerful language.\n\n\ud83d\ude80 Ready for a deep dive?\n- Check out my complete C++ course: https://mosh.link/cpp-course\n- Subscribe for more awesome content: https://goo.gl/6PYaGF\n\n\ud83d\udcd5 Get the FREE goodies:\n- C++ cheat sheet & summary notes: https://mosh.link/cpp-cheatsheet\n\n\u270b Stay connected:\n- Twitter: https://twitter.com/moshhamedani\n- Facebook: https://www.facebook.com/programmingwithmosh/\n- Instagram: https://www.instagram.com/codewithmosh.official/\n- LinkedIn: https://www.linkedin.com/school/codewithmosh/\n\n\ud83d\udcd6 TABLE OF CONTENT\n0:00:00 Course Introduction\n0:00:56 Introduction to C++\n0:04:14 Popular IDEs\n0:06:11 Your First C++ Program\n0:13:36 Compiling and Running a C++ Program \n0:16:01 Changing the Theme\n0:17:16 Course Structure\n0:18:48 Cheat Sheet\n0:19:20 Section 1: The Basics\n0:19:52 Variables\n0:26:00 Constants\n0:27:28 Naming Conventions\n0:30:25 Mathematica",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "the TRUTH about C++ (is it worth your time?) C++ gets a lot of hate on the internet, and there may be good reason for that. I think C++ is misunderstood, and there are a few simple reasons why. Despite being designed around 3 simple principles, the language has inflated to have a ton of features that are either too complicated to understand, or too powerful to implement without making your code base unmanageable. \n\nBut, should you learn C++? Yes. There are a few caveats though.\n\n\ud83c\udfeb COURSES \ud83c\udfeb Check out my new courses at https://lowlevel.academy\n\n\ud83d\ude4c SUPPORT THE CHANNEL \ud83d\ude4c Become a Low Level Associate and support the channel at https://youtube.com/c/LowLevelLearning/join\n\nWhy Are Switch Statements so HECKIN fast? https://youtu.be/fjUG_y5ZaL4\nWhy Do Header Files Exist? https://youtu.be/tOQZlD-0Scc\nHow Does Return Work?  https://youtu.be/e46wHUjNDjE\n\n\ud83d\uded2 GREAT BOOKS FOR THE LOWEST LEVEL\ud83d\uded2\nC Programming Language, 2nd Edition: https://amzn.to/3OKh3q2\nC++ Crash Course: A Fast-Paced Introduction: https://amzn.to/3qdZILK\nThe Rust Programming Language, 2nd Edition: https://amzn.to/3MHaS36\n\n\ud83d\udd25\ud83d\udd25\ud83d\udd25 SOCIALS \ud83d\udd25\ud83d\udd25\ud83d\udd25\nLow Level Merch!: https://www.linktr.ee/lowlevellearning\nFollow me on Twitter: https://twitter.com/LowLevelTweets\nFollow me on Twitch: https://twitch.tv/lowlevellearning\nJoin me on Discord!: https://discord.gg/gZhRXDdBYY Published at 2022-11-19T14:02:56Z"
            },
            "page_content": "the TRUTH about C++ (is it worth your time?) C++ gets a lot of hate on the internet, and there may be good reason for that. I think C++ is misunderstood, and there are a few simple reasons why. Despite being designed around 3 simple principles, the language has inflated to have a ton of features that are either too complicated to understand, or too powerful to implement without making your code base unmanageable. \n\nBut, should you learn C++? Yes. There are a few caveats though.\n\n\ud83c\udfeb COURSES \ud83c\udfeb Check out my new courses at https://lowlevel.academy\n\n\ud83d\ude4c SUPPORT THE CHANNEL \ud83d\ude4c Become a Low Level Associate and support the channel at https://youtube.com/c/LowLevelLearning/join\n\nWhy Are Switch Statements so HECKIN fast? https://youtu.be/fjUG_y5ZaL4\nWhy Do Header Files Exist? https://youtu.be/tOQZlD-0Scc\nHow Does Return Work?  https://youtu.be/e46wHUjNDjE\n\n\ud83d\uded2 GREAT BOOKS FOR THE LOWEST LEVEL\ud83d\uded2\nC Programming Language, 2nd Edition: https://amzn.to/3OKh3q2\nC++ Crash Course: A Fast-Paced Introduction: htt",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "C++ Tutorial for Beginners - Learn C++ in 1 Hour Learn C++ basics in 1 hour! \ud83d\ude80 This beginner-friendly tutorial is your fast start for this powerful language.\n\n\ud83d\ude80 Ready for a deep dive?\n- Check out my complete C++ course: https://mosh.link/cpp-course\n- Subscribe for more awesome content: https://goo.gl/6PYaGF\n\n\ud83d\udcd5 Get the FREE goodies:\n- C++ cheat sheet & summary notes: https://mosh.link/cpp-cheatsheet\n\n\u270b Stay connected:\n- Twitter: https://twitter.com/moshhamedani\n- Facebook: https://www.facebook.com/programmingwithmosh/\n- Instagram: https://www.instagram.com/codewithmosh.official/\n- LinkedIn: https://www.linkedin.com/school/codewithmosh/\n\n\ud83d\udcd6 TABLE OF CONTENT\n0:00:00 Course Introduction\n0:00:56 Introduction to C++\n0:04:14 Popular IDEs\n0:06:11 Your First C++ Program\n0:13:36 Compiling and Running a C++ Program \n0:16:01 Changing the Theme\n0:17:16 Course Structure\n0:18:48 Cheat Sheet\n0:19:20 Section 1: The Basics\n0:19:52 Variables\n0:26:00 Constants\n0:27:28 Naming Conventions\n0:30:25 Mathematical Expressions\n0:36:39 Order of Operators\n0:39:49 Writing Output to the Console\n0:49:06 Reading from the Console\n0:53:41 Working with the Standard Library \n0:58:19 Comments\n1:00:51 Introduction to Fundamental Data Types \n1:01:41 Section 2: Fundamental Data Types\n1:04:45 Initializing Variables\n1:09:29 Working with Numbers\n1:13:03 Narrowing\n1:15:17 Generating Random Numbers\n\n\ud83d\udca1 Why C++?\n- It's a high-performance language used in gaming, systems programming, and more.\n- Great for learning core programming concepts.\n\n\ud83d\udc49 This tutorial is perfect for you if:\n- You're a complete beginner.\n- You want a fast and practical intro to C++.\n- You're aiming for a career where C++ is valuable.\n\n#coding #programming Published at 2022-08-10T16:00:12Z"
            },
            "page_content": "l Expressions\n0:36:39 Order of Operators\n0:39:49 Writing Output to the Console\n0:49:06 Reading from the Console\n0:53:41 Working with the Standard Library \n0:58:19 Comments\n1:00:51 Introduction to Fundamental Data Types \n1:01:41 Section 2: Fundamental Data Types\n1:04:45 Initializing Variables\n1:09:29 Working with Numbers\n1:13:03 Narrowing\n1:15:17 Generating Random Numbers\n\n\ud83d\udca1 Why C++?\n- It's a high-performance language used in gaming, systems programming, and more.\n- Great for learning core programming concepts.\n\n\ud83d\udc49 This tutorial is perfect for you if:\n- You're a complete beginner.\n- You want a fast and practical intro to C++.\n- You're aiming for a career where C++ is valuable.\n\n#coding #programming Published at 2022-08-10T16:00:12Z",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "C++ Programming Course - Beginner to Advanced Learn modern C++ 20 programming in this comprehensive course.\n\n\ud83d\udcbb Source code: https://github.com/rutura/The-C-20-Masterclass-Source-Code\n\n\u270f\ufe0f Course developed by Daniel Gakwaya. Check out his YouTube channel: https://www.youtube.com/channel/UCUYUFiuJ5XZ3JYtbq5dXRKQ\n\ud83d\udc26 Twitter: https://twitter.com/learnqtguide\n\ud83d\udd17 Want more from Daniel? https://www.learnqt.guide/udemy-discounted-9/\n\ud83d\udd17 Join Daniel's discord server for support: https://discord.com/invite/PcATcraESW\n\n\u2b50\ufe0f Course Contents \u2b50\n(0:00:00) Introduction\n\n(0:04:32) Chapter 1: Setting up the tools\nTools\nInstalling C++ Compilers on Windows\nInstalling VS Code on Windows\nConfiguring Visual Studio Code for C++ on Windows\nInstalling C++ Compilers on Linux\nInstalling Visual Studio Code on Linux\nConfiguring Visual Studio Code for C++ on Linux\nInstalling C++ Compilers on MacOs\nInstalling Visual Studio Code on MacOs\nConfiguring Visual Studio Code for C++ on MacOs\nOnline Compilers\n\n(1:43:01) Chapter 2: Diving in\nYour First C++ Program\nComments\nErrors and Warnings\nStatements and Functions\nData input and output\nC++ Program Execution Model\nC++ core language Vs Standard library Vs STL\n\n(3:00:47) Chapter 3: Variables and data types\nVariables and data types Introduction\nNumber Systems\nInteger types : Decimals and Integers\nInteger Modifiers\nFractional Numbers\nBooleans\nCharacters And Text\nAuto\nAssignments\nVariables and data types summary\n\n(4:46:46) Chapter 4: Operations on Data\nIntroduction on Data operations\nBasic Operations\nPrecedence and Associativity\nPrefix/Postfix Increment & Decrement\nCompound Assignment Operators\nRelational Operators\nLogical Operators\nOutput formatting\nNumeric Limits\nMath Functions\nWeird Integral Types\nData Operations Summary\n\n(7:01:58) Chapter 5: Flow Control\nFlow Control Introduction\nIf Statements\nElse If\nSwitch\nTernary Operators\nFlow Control Summary\n\n(7:53:49) Chapter 6: Loops\nLoops Introduction\nFor Loop\nWhile Loop\nDo While Loop\n\n(8:47:08) Chapter 7: Arrays\nIntroduction to Arrays\nDeclaring and using arrays\nSize of an array\nArrays of characters\nArray Bounds\n\n(9:53:23) Chapter 8: Pointers\nIntroduction to Pointers\nDeclaring and using pointers\nPointer to char\nProgram Memory Map Revisited\nDynamic Memory Allocation\nDangling Pointers\nWhen new Fails\nNull Pointer Safety\nMemory Leaks\nDynamically allocated arrays\n\n(12:11:04) Chapter 9: References\nIntroduction to References\nDeclaring and using references\nComparing pointers and references\nReferences and const\n\n(12:44:29) Chapter 10: Character Manipulation and Strings\nIntroduction to Strings\nCharacter Manipulation\nC-string manipulation\nC-String concatenation and copy\nIntroducing std::string\nDeclaring and using std::string\n\n(14:12:47) Chapter 11: Functions\nThe One Definition Rule\nFirst Hand on C++ Functions\nFunction Declaration and Function Definitions\nMultiple Files - Compilation Model Revisited\nPass by value\nPass by pointer\nPass by reference\n\n(16:03:20) Chapter 12: Getting Things out of functions\nIntroduction to getting things out of functions\nInput and output parameters\nReturning from functions by value\n\n(16:32:35) Chapter 13: Function Overloading\nFunction Overloading Introduction\nOverloading with different parameters\n\n(16:49:00) Chapter 14: Lambda functions\nIntro to Lambda Functions\nDeclaring and using lambda functions\nCapture lists\nCapture all in context\nSummary\n\n(17:40:08) Chapter 15: Function Templates\nIntro to function templates\nTrying out function templates\nTemplate type deduction and explicit arguments\nTemplate parameters by reference\nTemplate specialization\n\n(19:04:31) Chapter 16: C++20 Concepts Crash course\nIntro to C++20 Concepts\nUsing C++20 Concepts\nBuilding your own C++20 Concepts\nZooming in on the requires clause\nCombining C++20 Concepts\nC++20 Concepts and auto\n\n(20:15:40) Chapter 17: Classes\nIntro to classes\nYour First Class\nC++ Constructors\nDefaulted constructors\nSetters and Getters\nClass Across Multiple Files\nArrow pointer call notation\nDestructors\nOrder of Constructor Destructor Calls\nThe this Pointer\nstruct\nSize of objects\n\n(22:52:43) Chapter 18: Inheritance\nIntroduction to Inheritance\nFirst try on Inheritance\nProtected members\nBase class access specifiers : Zooming in\nClosing in on Private Inheritance\nResurrecting Members Back in Context\nDefault Constructors with Inheritance\nCustom Constructors With Inheritance\nCopy Constructors with Inheritance\nInheriting Base Constructors\nInheritance and Destructors\nReused Symbols in Inheritance\n\n(26:21:03) Chapter 19: Polymorphism\nIntroduction to Polymorphism\nStatic Binding with Inheritance\nDynamic binding with virtual functions\nSize of polymorphic objects and slicing\nPolymorphic objects stored in collections (array)\nOverride\nOverloading, overriding and function hiding\nInheritance and Polymorphism at different levels\nInheritance and polymorphism with static members\nFinal\nVirtual functions with default arguments\nVirtual Destructors\nDynamic casts\nPolymorphic Functions and Destructors\nPure virtual functions and abstract classes\nAbstract Classes as Interfaces Published at 2022-02-17T14:45:42Z"
            },
            "page_content": " to getting things out of functions\nInput and output parameters\nReturning from functions by value\n\n(16:32:35) Chapter 13: Function Overloading\nFunction Overloading Introduction\nOverloading with different parameters\n\n(16:49:00) Chapter 14: Lambda functions\nIntro to Lambda Functions\nDeclaring and using lambda functions\nCapture lists\nCapture all in context\nSummary\n\n(17:40:08) Chapter 15: Function Templates\nIntro to function templates\nTrying out function templates\nTemplate type deduction and explicit arguments\nTemplate parameters by reference\nTemplate specialization\n\n(19:04:31) Chapter 16: C++20 Concepts Crash course\nIntro to C++20 Concepts\nUsing C++20 Concepts\nBuilding your own C++20 Concepts\nZooming in on the requires clause\nCombining C++20 Concepts\nC++20 Concepts and auto\n\n(20:15:40) Chapter 17: Classes\nIntro to classes\nYour First Class\nC++ Constructors\nDefaulted constructors\nSetters and Getters\nClass Across Multiple Files\nArrow pointer call notation\nDestructors\nOrder of Constructor Des",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "C++ Programming Course - Beginner to Advanced Learn modern C++ 20 programming in this comprehensive course.\n\n\ud83d\udcbb Source code: https://github.com/rutura/The-C-20-Masterclass-Source-Code\n\n\u270f\ufe0f Course developed by Daniel Gakwaya. Check out his YouTube channel: https://www.youtube.com/channel/UCUYUFiuJ5XZ3JYtbq5dXRKQ\n\ud83d\udc26 Twitter: https://twitter.com/learnqtguide\n\ud83d\udd17 Want more from Daniel? https://www.learnqt.guide/udemy-discounted-9/\n\ud83d\udd17 Join Daniel's discord server for support: https://discord.com/invite/PcATcraESW\n\n\u2b50\ufe0f Course Contents \u2b50\n(0:00:00) Introduction\n\n(0:04:32) Chapter 1: Setting up the tools\nTools\nInstalling C++ Compilers on Windows\nInstalling VS Code on Windows\nConfiguring Visual Studio Code for C++ on Windows\nInstalling C++ Compilers on Linux\nInstalling Visual Studio Code on Linux\nConfiguring Visual Studio Code for C++ on Linux\nInstalling C++ Compilers on MacOs\nInstalling Visual Studio Code on MacOs\nConfiguring Visual Studio Code for C++ on MacOs\nOnline Compilers\n\n(1:43:01) Chapter 2: Diving in\nYour First C++ Program\nComments\nErrors and Warnings\nStatements and Functions\nData input and output\nC++ Program Execution Model\nC++ core language Vs Standard library Vs STL\n\n(3:00:47) Chapter 3: Variables and data types\nVariables and data types Introduction\nNumber Systems\nInteger types : Decimals and Integers\nInteger Modifiers\nFractional Numbers\nBooleans\nCharacters And Text\nAuto\nAssignments\nVariables and data types summary\n\n(4:46:46) Chapter 4: Operations on Data\nIntroduction on Data operations\nBasic Operations\nPrecedence and Associativity\nPrefix/Postfix Increment & Decrement\nCompound Assignment Operators\nRelational Operators\nLogical Operators\nOutput formatting\nNumeric Limits\nMath Functions\nWeird Integral Types\nData Operations Summary\n\n(7:01:58) Chapter 5: Flow Control\nFlow Control Introduction\nIf Statements\nElse If\nSwitch\nTernary Operators\nFlow Control Summary\n\n(7:53:49) Chapter 6: Loops\nLoops Introduction\nFor Loop\nWhile Loop\nDo While Loop\n\n(8:47:08) Chapter 7: Arrays\nIntroduction to Arrays\nDeclaring and using arrays\nSize of an array\nArrays of characters\nArray Bounds\n\n(9:53:23) Chapter 8: Pointers\nIntroduction to Pointers\nDeclaring and using pointers\nPointer to char\nProgram Memory Map Revisited\nDynamic Memory Allocation\nDangling Pointers\nWhen new Fails\nNull Pointer Safety\nMemory Leaks\nDynamically allocated arrays\n\n(12:11:04) Chapter 9: References\nIntroduction to References\nDeclaring and using references\nComparing pointers and references\nReferences and const\n\n(12:44:29) Chapter 10: Character Manipulation and Strings\nIntroduction to Strings\nCharacter Manipulation\nC-string manipulation\nC-String concatenation and copy\nIntroducing std::string\nDeclaring and using std::string\n\n(14:12:47) Chapter 11: Functions\nThe One Definition Rule\nFirst Hand on C++ Functions\nFunction Declaration and Function Definitions\nMultiple Files - Compilation Model Revisited\nPass by value\nPass by pointer\nPass by reference\n\n(16:03:20) Chapter 12: Getting Things out of functions\nIntroduction to getting things out of functions\nInput and output parameters\nReturning from functions by value\n\n(16:32:35) Chapter 13: Function Overloading\nFunction Overloading Introduction\nOverloading with different parameters\n\n(16:49:00) Chapter 14: Lambda functions\nIntro to Lambda Functions\nDeclaring and using lambda functions\nCapture lists\nCapture all in context\nSummary\n\n(17:40:08) Chapter 15: Function Templates\nIntro to function templates\nTrying out function templates\nTemplate type deduction and explicit arguments\nTemplate parameters by reference\nTemplate specialization\n\n(19:04:31) Chapter 16: C++20 Concepts Crash course\nIntro to C++20 Concepts\nUsing C++20 Concepts\nBuilding your own C++20 Concepts\nZooming in on the requires clause\nCombining C++20 Concepts\nC++20 Concepts and auto\n\n(20:15:40) Chapter 17: Classes\nIntro to classes\nYour First Class\nC++ Constructors\nDefaulted constructors\nSetters and Getters\nClass Across Multiple Files\nArrow pointer call notation\nDestructors\nOrder of Constructor Destructor Calls\nThe this Pointer\nstruct\nSize of objects\n\n(22:52:43) Chapter 18: Inheritance\nIntroduction to Inheritance\nFirst try on Inheritance\nProtected members\nBase class access specifiers : Zooming in\nClosing in on Private Inheritance\nResurrecting Members Back in Context\nDefault Constructors with Inheritance\nCustom Constructors With Inheritance\nCopy Constructors with Inheritance\nInheriting Base Constructors\nInheritance and Destructors\nReused Symbols in Inheritance\n\n(26:21:03) Chapter 19: Polymorphism\nIntroduction to Polymorphism\nStatic Binding with Inheritance\nDynamic binding with virtual functions\nSize of polymorphic objects and slicing\nPolymorphic objects stored in collections (array)\nOverride\nOverloading, overriding and function hiding\nInheritance and Polymorphism at different levels\nInheritance and polymorphism with static members\nFinal\nVirtual functions with default arguments\nVirtual Destructors\nDynamic casts\nPolymorphic Functions and Destructors\nPure virtual functions and abstract classes\nAbstract Classes as Interfaces Published at 2022-02-17T14:45:42Z"
            },
            "page_content": "iving in\nYour First C++ Program\nComments\nErrors and Warnings\nStatements and Functions\nData input and output\nC++ Program Execution Model\nC++ core language Vs Standard library Vs STL\n\n(3:00:47) Chapter 3: Variables and data types\nVariables and data types Introduction\nNumber Systems\nInteger types : Decimals and Integers\nInteger Modifiers\nFractional Numbers\nBooleans\nCharacters And Text\nAuto\nAssignments\nVariables and data types summary\n\n(4:46:46) Chapter 4: Operations on Data\nIntroduction on Data operations\nBasic Operations\nPrecedence and Associativity\nPrefix/Postfix Increment & Decrement\nCompound Assignment Operators\nRelational Operators\nLogical Operators\nOutput formatting\nNumeric Limits\nMath Functions\nWeird Integral Types\nData Operations Summary\n\n(7:01:58) Chapter 5: Flow Control\nFlow Control Introduction\nIf Statements\nElse If\nSwitch\nTernary Operators\nFlow Control Summary\n\n(7:53:49) Chapter 6: Loops\nLoops Introduction\nFor Loop\nWhile Loop\nDo While Loop\n\n(8:47:08) Chapter 7: Arrays\nIntroduc",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "C++ Programming Course - Beginner to Advanced Learn modern C++ 20 programming in this comprehensive course.\n\n\ud83d\udcbb Source code: https://github.com/rutura/The-C-20-Masterclass-Source-Code\n\n\u270f\ufe0f Course developed by Daniel Gakwaya. Check out his YouTube channel: https://www.youtube.com/channel/UCUYUFiuJ5XZ3JYtbq5dXRKQ\n\ud83d\udc26 Twitter: https://twitter.com/learnqtguide\n\ud83d\udd17 Want more from Daniel? https://www.learnqt.guide/udemy-discounted-9/\n\ud83d\udd17 Join Daniel's discord server for support: https://discord.com/invite/PcATcraESW\n\n\u2b50\ufe0f Course Contents \u2b50\n(0:00:00) Introduction\n\n(0:04:32) Chapter 1: Setting up the tools\nTools\nInstalling C++ Compilers on Windows\nInstalling VS Code on Windows\nConfiguring Visual Studio Code for C++ on Windows\nInstalling C++ Compilers on Linux\nInstalling Visual Studio Code on Linux\nConfiguring Visual Studio Code for C++ on Linux\nInstalling C++ Compilers on MacOs\nInstalling Visual Studio Code on MacOs\nConfiguring Visual Studio Code for C++ on MacOs\nOnline Compilers\n\n(1:43:01) Chapter 2: Diving in\nYour First C++ Program\nComments\nErrors and Warnings\nStatements and Functions\nData input and output\nC++ Program Execution Model\nC++ core language Vs Standard library Vs STL\n\n(3:00:47) Chapter 3: Variables and data types\nVariables and data types Introduction\nNumber Systems\nInteger types : Decimals and Integers\nInteger Modifiers\nFractional Numbers\nBooleans\nCharacters And Text\nAuto\nAssignments\nVariables and data types summary\n\n(4:46:46) Chapter 4: Operations on Data\nIntroduction on Data operations\nBasic Operations\nPrecedence and Associativity\nPrefix/Postfix Increment & Decrement\nCompound Assignment Operators\nRelational Operators\nLogical Operators\nOutput formatting\nNumeric Limits\nMath Functions\nWeird Integral Types\nData Operations Summary\n\n(7:01:58) Chapter 5: Flow Control\nFlow Control Introduction\nIf Statements\nElse If\nSwitch\nTernary Operators\nFlow Control Summary\n\n(7:53:49) Chapter 6: Loops\nLoops Introduction\nFor Loop\nWhile Loop\nDo While Loop\n\n(8:47:08) Chapter 7: Arrays\nIntroduction to Arrays\nDeclaring and using arrays\nSize of an array\nArrays of characters\nArray Bounds\n\n(9:53:23) Chapter 8: Pointers\nIntroduction to Pointers\nDeclaring and using pointers\nPointer to char\nProgram Memory Map Revisited\nDynamic Memory Allocation\nDangling Pointers\nWhen new Fails\nNull Pointer Safety\nMemory Leaks\nDynamically allocated arrays\n\n(12:11:04) Chapter 9: References\nIntroduction to References\nDeclaring and using references\nComparing pointers and references\nReferences and const\n\n(12:44:29) Chapter 10: Character Manipulation and Strings\nIntroduction to Strings\nCharacter Manipulation\nC-string manipulation\nC-String concatenation and copy\nIntroducing std::string\nDeclaring and using std::string\n\n(14:12:47) Chapter 11: Functions\nThe One Definition Rule\nFirst Hand on C++ Functions\nFunction Declaration and Function Definitions\nMultiple Files - Compilation Model Revisited\nPass by value\nPass by pointer\nPass by reference\n\n(16:03:20) Chapter 12: Getting Things out of functions\nIntroduction to getting things out of functions\nInput and output parameters\nReturning from functions by value\n\n(16:32:35) Chapter 13: Function Overloading\nFunction Overloading Introduction\nOverloading with different parameters\n\n(16:49:00) Chapter 14: Lambda functions\nIntro to Lambda Functions\nDeclaring and using lambda functions\nCapture lists\nCapture all in context\nSummary\n\n(17:40:08) Chapter 15: Function Templates\nIntro to function templates\nTrying out function templates\nTemplate type deduction and explicit arguments\nTemplate parameters by reference\nTemplate specialization\n\n(19:04:31) Chapter 16: C++20 Concepts Crash course\nIntro to C++20 Concepts\nUsing C++20 Concepts\nBuilding your own C++20 Concepts\nZooming in on the requires clause\nCombining C++20 Concepts\nC++20 Concepts and auto\n\n(20:15:40) Chapter 17: Classes\nIntro to classes\nYour First Class\nC++ Constructors\nDefaulted constructors\nSetters and Getters\nClass Across Multiple Files\nArrow pointer call notation\nDestructors\nOrder of Constructor Destructor Calls\nThe this Pointer\nstruct\nSize of objects\n\n(22:52:43) Chapter 18: Inheritance\nIntroduction to Inheritance\nFirst try on Inheritance\nProtected members\nBase class access specifiers : Zooming in\nClosing in on Private Inheritance\nResurrecting Members Back in Context\nDefault Constructors with Inheritance\nCustom Constructors With Inheritance\nCopy Constructors with Inheritance\nInheriting Base Constructors\nInheritance and Destructors\nReused Symbols in Inheritance\n\n(26:21:03) Chapter 19: Polymorphism\nIntroduction to Polymorphism\nStatic Binding with Inheritance\nDynamic binding with virtual functions\nSize of polymorphic objects and slicing\nPolymorphic objects stored in collections (array)\nOverride\nOverloading, overriding and function hiding\nInheritance and Polymorphism at different levels\nInheritance and polymorphism with static members\nFinal\nVirtual functions with default arguments\nVirtual Destructors\nDynamic casts\nPolymorphic Functions and Destructors\nPure virtual functions and abstract classes\nAbstract Classes as Interfaces Published at 2022-02-17T14:45:42Z"
            },
            "page_content": "tion to Arrays\nDeclaring and using arrays\nSize of an array\nArrays of characters\nArray Bounds\n\n(9:53:23) Chapter 8: Pointers\nIntroduction to Pointers\nDeclaring and using pointers\nPointer to char\nProgram Memory Map Revisited\nDynamic Memory Allocation\nDangling Pointers\nWhen new Fails\nNull Pointer Safety\nMemory Leaks\nDynamically allocated arrays\n\n(12:11:04) Chapter 9: References\nIntroduction to References\nDeclaring and using references\nComparing pointers and references\nReferences and const\n\n(12:44:29) Chapter 10: Character Manipulation and Strings\nIntroduction to Strings\nCharacter Manipulation\nC-string manipulation\nC-String concatenation and copy\nIntroducing std::string\nDeclaring and using std::string\n\n(14:12:47) Chapter 11: Functions\nThe One Definition Rule\nFirst Hand on C++ Functions\nFunction Declaration and Function Definitions\nMultiple Files - Compilation Model Revisited\nPass by value\nPass by pointer\nPass by reference\n\n(16:03:20) Chapter 12: Getting Things out of functions\nIntroduction",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "C vs C++ vs C# Join this channel to get access to perks:\nhttps://www.youtube.com/channel/UCRLHJ-7b4pjDpBBHAUXEvjQ/join\n\nDiscord Server: https://discord.gg/Gm6HqS8n\nGithub: https://github.com/conaticus\nTwitter: https://twitter.com/conaticus\n\nLearn C++: https://learncpp.com\n\nMusic Credit:\n\nFaster Does It by Kevin MacLeod is licensed under a Creative Commons Attribution licence (https://creativecommons.org/licenses/...)\nSource: http://incompetech.com/music/royalty-...\nArtist: http://incompetech.com/ Published at 2021-12-24T15:00:40Z"
            },
            "page_content": "C vs C++ vs C# Join this channel to get access to perks:\nhttps://www.youtube.com/channel/UCRLHJ-7b4pjDpBBHAUXEvjQ/join\n\nDiscord Server: https://discord.gg/Gm6HqS8n\nGithub: https://github.com/conaticus\nTwitter: https://twitter.com/conaticus\n\nLearn C++: https://learncpp.com\n\nMusic Credit:\n\nFaster Does It by Kevin MacLeod is licensed under a Creative Commons Attribution licence (https://creativecommons.org/licenses/...)\nSource: http://incompetech.com/music/royalty-...\nArtist: http://incompetech.com/ Published at 2021-12-24T15:00:40Z",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "C++ Full Course for free \u26a1\ufe0f C++ tutorial for beginners\n\nThis video serves as an introduction to the C++ programming language\nC++ is a beast of a language. We're only scratching the surface.\n\n\u2b50\ufe0fTime Stamps\u2b50\ufe0f\n1#  (00:00:00) C++ tutorial for beginners \ud83d\udc68\u200d\ud83d\udcbb\n2#  (00:13:30) Variables and basic data types \u2717\n3#  (00:24:14) Const \ud83d\udeab\n4#  (00:27:37) Namespaces \ud83d\udcdb\n5#  (00:32:13) Typedef and type aliases \ud83d\ude4b\u200d\u2642\ufe0f\n6#  (00:37:39) Arithmetic operators \ud83e\uddee\n7#  (00:43:18) Type conversion \u2728\n8#  (00:47:05) User input \u2328\ufe0f\n9#  (00:52:35) Useful math related functions\ud83d\udd22\n10# (00:56:03) Hypotenuse calculator practice program \ud83d\udcd0\n11# (00:58:44) If statements \ud83e\udd14\n12# (01:03:40) Switches \ud83d\udd00\n13# (01:09:29) Console calculator program \ud83d\udda9\n14# (01:14:13) Ternary operator \u2753\n15# (01:18:53) Logical operators \ud83d\udd23\n16# (01:23:55) Temperature conversion program \ud83c\udf21\ufe0f\n17# (01:29:17) Useful string methods in C++ \u3030\ufe0f\n18# (01:35:51) While loops \u267e\ufe0f\n19# (01:38:56) Do while loops \ud83d\udd03\n20# (01:42:15) For loops \ud83d\udd02\n21# (01:45:53) Break & continue \ud83d\udc94\n22# (01:47:34) Nested loops \u27bf\n23# (01:51:51) Random number generator \ud83c\udfb2\n24# (01:55:25) Random event generator \ud83c\udf81\n25# (01:59:05) Number guessing game \u2195\ufe0f\n26# (02:03:10) User defined functions \ud83d\udcde\n27# (02:10:33) Return keyword \ud83d\udd19\n28# (02:16:42) Overloaded functions \ud83c\udf55\n29# (02:19:49) Variable scope \ud83c\udf0e\n30# (02:24:11) Banking practice program \ud83d\udcb0\n31# (02:38:04) ROCK PAPER SCISSORS game \ud83d\udc4a\n32# (02:51:11) Arrays \ud83d\ude97\n33# (02:56:40) Sizeof() operator \u2696\ufe0f\n34# (03:01:34) Iterate over an array \ud83d\uddc3\ufe0f\n35# (03:05:40) Foreach loop \ud83d\uddc2\ufe0f\n36# (03:08:36) Pass array to a function \ud83d\udcb5\n37# (03:13:07) Search an array for an element \ud83d\udd0e\n38# (03:20:43) Sort an array \u27a1\ufe0f\n39# (03:26:37) Fill() function \ud83c\udf54\n40# (03:31:19) Fill an array with user input \ud83c\udf2d\n41# (03:38:17) Multidimensional arrays \u2b1c\n42# (03:45:57) QUIZ GAME \ud83d\udcaf\n43# (03:57:42) Memory addresses \ud83c\udfe0\n44# (04:00:31) Pass by VALUE vs pass by REFERENCE \ud83d\udce7\n45# (04:04:47) Const parameters \ud83e\uddf1\n46# (04:07:54) Credit card validator program \ud83d\udcb3\n47# (04:17:56) Pointers \ud83d\udc48\n48# (04:23:12) Null pointers \u26d4\n49# (04:27:17) TIC TAC TOE game \u2b55\n50# (04:46:26) Dynamic memory \ud83e\udde0\n51# (04:52:15) Recursion \ud83d\ude35\n52# (04:58:35) Function templates \ud83c\udf6a\n53# (05:03:49) Structs \ud83c\udfd7\ufe0f\n54# (05:08:49) Pass structs as arguments \ud83d\ude9a\n55# (05:14:17) Enums \ud83d\udcc5\n56# (05:18:38) Object Oriented Programming \ud83e\uddcd\n57# (05:29:32) Constructors \ud83d\udc77\n58# (05:38:26) Constructor overloading \ud83d\udc68\u200d\ud83c\udf73\n59# (05:42:51) Getters & setters \ud83d\udd12\n60# (05:48:59) Inheritance \ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66\n\nCopyright Disclaimer:\n\nThis video is the intellectual property of Bro Code. All rights reserved. No part of this video may be reproduced, distributed, or transmitted in any form or by any means, including but not limited to recording, uploading, or other electronic or mechanical methods, without my written permission, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law. Published at 2022-06-28T23:47:32Z"
            },
            "page_content": "C++ Full Course for free \u26a1\ufe0f C++ tutorial for beginners\n\nThis video serves as an introduction to the C++ programming language\nC++ is a beast of a language. We're only scratching the surface.\n\n\u2b50\ufe0fTime Stamps\u2b50\ufe0f\n1#  (00:00:00) C++ tutorial for beginners \ud83d\udc68\u200d\ud83d\udcbb\n2#  (00:13:30) Variables and basic data types \u2717\n3#  (00:24:14) Const \ud83d\udeab\n4#  (00:27:37) Namespaces \ud83d\udcdb\n5#  (00:32:13) Typedef and type aliases \ud83d\ude4b\u200d\u2642\ufe0f\n6#  (00:37:39) Arithmetic operators \ud83e\uddee\n7#  (00:43:18) Type conversion \u2728\n8#  (00:47:05) User input \u2328\ufe0f\n9#  (00:52:35) Useful math related functions\ud83d\udd22\n10# (00:56:03) Hypotenuse calculator practice program \ud83d\udcd0\n11# (00:58:44) If statements \ud83e\udd14\n12# (01:03:40) Switches \ud83d\udd00\n13# (01:09:29) Console calculator program \ud83d\udda9\n14# (01:14:13) Ternary operator \u2753\n15# (01:18:53) Logical operators \ud83d\udd23\n16# (01:23:55) Temperature conversion program \ud83c\udf21\ufe0f\n17# (01:29:17) Useful string methods in C++ \u3030\ufe0f\n18# (01:35:51) While loops \u267e\ufe0f\n19# (01:38:56) Do while loops \ud83d\udd03\n20# (01:42:15) For loops \ud83d\udd02\n21# (01:45:53) Break & continue \ud83d\udc94\n22# (01:47:3",
            "type": "Document"
        }
    ],
    "path": "\n    1. [1]. What is C++?: C++ is a general-purpose programming language developed by Bjarne Stroustrup at Bell Labs in 1983. It is an extension of the C programming language, adding object-oriented, generic, and memory management features. - Microsoft Docs (<https://docs.microsoft.com/en-us/cpp/cpp/what-is-cpp?view=msvc-170>)\n    2. [2]. C++ basics tutorial: This tutorial covers the basics of C++, including variables, data types, operators, control structures, functions, and arrays. - Codecademy (<https://www.codecademy.com/learn/learn-cpp>)\n    3. [3]. Who invented C++?: Bjarne Stroustrup invented C++ in 1983 at Bell Labs. - Microsoft Docs (<https://docs.microsoft.com/en-us/cpp/cpp/who-created-cpp?view=msvc-170>)\n    4. [4]. What is C++ used for?: C++ is used for developing a wide range of applications, including operating systems, web browsers, games, and financial applications. - Microsoft Docs (<https://docs.microsoft.com/en-us/cpp/cpp/what-is-cpp-used-for?view=msvc-170>)\n    5. [5]. Object oriented programming basics: Object-oriented programming (OOP) is a programming paradigm based on the concept of \"objects\", which can contain data and functions that operate on that data. - Microsoft Docs (<https://docs.microsoft.com/en-us/cpp/cpp/what-is-object-oriented-programming?view=msvc-170>)\n    6. [6]. Smart pointers: Smart pointers are a type of pointer that automatically manages the memory they point to, reducing the risk of memory leaks and dangling pointers. - Microsoft Docs (<https://docs.microsoft.com/en-us/cpp/cpp/smart-pointers-overview?view=msvc-170>)\n    7. [7]. C++ vs C: C++ is an extension of the C programming language,",
    "topics": " Based on the context provided, the following topics related to C++ were discussed:\n\n1. What is C++?\n2. C++ basics tutorial\n3. Who invented C++?\n4. What is C++ used for?\n5. Object oriented programming basics\n6. Smart pointers\n7. C++ vs C\n8. Variables and data types (number systems, integer types, fractional numbers, Booleans, characters and text, auto)\n9. Operations on data (basic operations, precedence and associativity, prefix/postfix increment & decrement, compound assignment operators, relational operators, logical operators, output formatting, numeric limits, math functions, weird integral types)\n10. Flow control (If statements, Else If, Switch, Ternary Operators)\n11. Loops (For Loop, While Loop, Do While Loop)\n12. Arrays (declaring and using arrays, size of an array, arrays of characters, array bounds)\n13. Pointers (declaring and using pointers, pointer to char, program memory map, dynamic memory allocation, dangling pointers, when new fails, null pointer safety, memory leaks, dynamically allocated arrays)\n14. References (declaring and using references, comparing pointers and references, references and const)\n15. Character Manipulation and Strings (introduction to Strings, character manipulation, C-string manipulation, C-String concatenation and copy, introducing std::string, declaring and using std::string)\n16. Functions (The One Definition Rule, First Hand on C++ Functions, Function Declaration and Function Definitions, Multiple Files - Compilation Model Revisited, Pass by value, Pass by pointer, Pass by reference)\n17. Getting Things out of functions\n18. Function Overloading\n19. Lambda functions\n20. Function Templates\n21. C++20 Concepts\n22. Classes (intro to classes, your first class, C++ Constructors, Defaulted constructors, Setters and Getters, Class Across Multiple Files, Arrow pointer call notation, Destructors, Order of Constructor Desiving)\n\nAs for the resources, the following were mentioned:\n\n1. Microsoft Docs (<"
}