{
    "source_documents": [
        {
            "id": null,
            "metadata": {
                "source": "Learn GO Fast: Full Tutorial This is a full tutorial on learning Golang! From start to finish in less than an hour, including a full demo of how to build an api in Go. No fluff, just what you need to know.\n\n0:00 Introduction to Golang\n6:25 Constants Variables and Basic Data Types\n13:14 Functions and Control Structures\n19:30 Arrays, Slices, Maps and Loops\n26:36 Strings, Runes and Bytes\n31:06 Structs and Interfaces\n35:18 Pointers\n40:06 Goroutines\n47:10 Channels\n52:56 Generics\n55:47 Building an API! Published at 2023-09-04T13:47:22Z"
            },
            "page_content": "Learn GO Fast: Full Tutorial This is a full tutorial on learning Golang! From start to finish in less than an hour, including a full demo of how to build an api in Go. No fluff, just what you need to know.\n\n0:00 Introduction to Golang\n6:25 Constants Variables and Basic Data Types\n13:14 Functions and Control Structures\n19:30 Arrays, Slices, Maps and Loops\n26:36 Strings, Runes and Bytes\n31:06 Structs and Interfaces\n35:18 Pointers\n40:06 Goroutines\n47:10 Channels\n52:56 Generics\n55:47 Building an API! Published at 2023-09-04T13:47:22Z",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "Go Programming \u2013 Golang Course with Bonus Projects Learn the Go programming language in this full course for beginners. You'll practice writing performant, idiomatic Go with these hands-on lessons and challenges.\n\n\ud83d\udcbb Code: https://github.com/bootdotdev/fcc-learn-golang-assets\n\ud83d\udcbb Follow along interactively on Boot.dev: https://boot.dev/learn/learn-golang\n\n\u270f\ufe0f Course created by @bootdotdev \n\ud83d\udc26 Follow Lane on Twitter: https://twitter.com/wagslane\n\n\ud83d\udd17 Learn back-end on Boot.dev: https://boot.dev\n\ud83d\udd17 Need help? Join the Boot.dev Discord: https://boot.dev/community\n\nDocumentation used:\n\ud83d\udd17 Chi router: https://github.com/go-chi/chi\n\ud83d\udd17 Goose migrations: https://github.com/pressly/goose\n\ud83d\udd17 Text instructions for the project: https://boot.dev/build/blog-aggregator\n\n\u2b50\ufe0f Contents \u2b50\ufe0f\n(0:00:00) Intro\n(0:03:17) Ch 1. Why write Go?\n(0:27:39) Ch 2. Variables\n(0:51:11) Ch 3. Functions\n(1:16:58) Ch 4. Structs\n(1:34:36) Ch 5. Interfaces\n(2:00:26) Ch 6. Errors\n(2:22:01) Ch 7. Loops\n(2:48:21) Ch 8. Slices\n(3:39:54) Ch 9. Maps\n(4:06:19) Ch 10. Advanced functions\n(4:31:03) Ch 11. Pointers\n(4:48:02) Ch 12. Local development\n(5:31:43) Ch 13. Channels & concurrency\n(6:07:38) Ch 14. Mutexes\n(6:30:56) Ch 15. Generics\n(6:38:38) Ch 16. Quiz\n(6:43:13) P1. RSS aggregator project\n(6:53:43) P2. Chi router\n(7:11:37) P3. Postgres database\n(7:39:10) P4. Authentication w/ API keys\n(8:18:28) P5. Many to many relationships\n(8:39:13) P6. Aggregation worker\n(9:05:28) P7. Viewing blog posts\n\n\ud83c\udf89 Thanks to our Champion and Sponsor supporters:\n\ud83d\udc7e davthecoder\n\ud83d\udc7e jedi-or-sith\n\ud83d\udc7e \u5357\u5bae\u5343\u5f71\n\ud83d\udc7e Agust\u00edn Kussrow\n\ud83d\udc7e Nattira Maneerat\n\ud83d\udc7e Heather Wcislo\n\ud83d\udc7e Serhiy Kalinets\n\ud83d\udc7e Justin Hual\n\ud83d\udc7e Otis Morgan\n\n--\n\nLearn to code for free and get a developer job: https://www.freecodecamp.org\n\nRead hundreds of articles on programming: https://freecodecamp.org/news Published at 2023-05-11T13:41:01Z"
            },
            "page_content": "Go Programming \u2013 Golang Course with Bonus Projects Learn the Go programming language in this full course for beginners. You'll practice writing performant, idiomatic Go with these hands-on lessons and challenges.\n\n\ud83d\udcbb Code: https://github.com/bootdotdev/fcc-learn-golang-assets\n\ud83d\udcbb Follow along interactively on Boot.dev: https://boot.dev/learn/learn-golang\n\n\u270f\ufe0f Course created by @bootdotdev \n\ud83d\udc26 Follow Lane on Twitter: https://twitter.com/wagslane\n\n\ud83d\udd17 Learn back-end on Boot.dev: https://boot.dev\n\ud83d\udd17 Need help? Join the Boot.dev Discord: https://boot.dev/community\n\nDocumentation used:\n\ud83d\udd17 Chi router: https://github.com/go-chi/chi\n\ud83d\udd17 Goose migrations: https://github.com/pressly/goose\n\ud83d\udd17 Text instructions for the project: https://boot.dev/build/blog-aggregator\n\n\u2b50\ufe0f Contents \u2b50\ufe0f\n(0:00:00) Intro\n(0:03:17) Ch 1. Why write Go?\n(0:27:39) Ch 2. Variables\n(0:51:11) Ch 3. Functions\n(1:16:58) Ch 4. Structs\n(1:34:36) Ch 5. Interfaces\n(2:00:26) Ch 6. Errors\n(2:22:01) Ch 7. Loops\n(2:48:21) Ch 8. Slices\n(3:39:54) Ch 9",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "https://www.youtube.com/watch?v=gS_nHTWZEJ8"
            },
            "page_content": "urse to Elastic Stack: \nhttps://ela.st/beginners-table-of-contents\n\nThe link above includes the table of contents for all repos shared during the course. \n\nThese repos contain all the resources shared during the workshops including the presentation slides, the recording, as well as Elasticsearch requests. \n\nBe sure to check out Part 1 repo as you follow along!",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "Golang Tutorial for Beginners | Full Go Course Full Golang Tutorial to learn the Go Programming Language while building a simple CLI application \n\nIn this full Golang course you will learn about one of the youngest programming languages that is becoming more and more popular in the cloud engineering world, which is Go or also commonly known as Golang. \nYou will learn everything you need to get started with Go and start using it in your projects. We're going to write a very simple CLI application to learn the basics of Go. So instead of learning the concepts and syntax of Go with isolated examples, you will learn them while building an actual application throughout the tutorial.\n\nBefore diving right into the syntax you will first understand why Go was even developed, its use cases or what Golang is used for and how Go is different from other programming languages.\n\n#golang #techworldwithnana\n\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac  L I N K S  \ud83d\udd17\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac \nGit Repo:                                                           \u25ba  https://gitlab.com/nanuchi/go-full-course-youtube\nCourse Waitlist - Sign up to get notified:     \u25ba  https://www.techworld-with-nana.com/course-roadmap\n\n\n\u25ba  This video is sponsored by Kasten \ud83d\ude4c\ud83c\udffc\n\u25ba  Free Kubernetes Backup and Migration - Download Kasten's K10 and Get 10 nodes free forever: https://www.kasten.io/nana\n\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac T I M E S T A M P S \u23f0  \u25ac\u25ac\u25ac\u25ac\u25ac\u25ac\n0:00     - Intro & Course Overview\nINTRODUCTION TO GO\n02:47    - What is Go? Why Go? How it's different?\n06:50    - Characteristics of Go and Go Use Cases\nGO SYNTAX & CONCEPTS\n08:59    - Local Setup - Install Go & Editor\n12:54    - Write our First Program & Structure of a Go File\n22:02    - Variables & Constants in Go\n30:43    - Formatted Output - printf \n33:43    - Data Types in Go\n45:18    - Getting User Input\n47:19    - What is a Pointer?\n53:55    - Book Ticket Logic\n57:16    - Arrays & Slices\n1:11:12 - Loops in Go\n1:24:24 - Conditionals (if / else) and Boolean Data Type\n1:39:33 - Validate User Input\n1:54:02 - Switch Statement\n1:58:37 - Encapsulate Logic with Functions\n2:22:36 - Organize Code with Go Packages\n2:35:39 - Scope Rules in Go\n2:37:16 - Maps\n2:53:20 - Structs\n3:02:15 - Goroutines - Concurrency in Go\n3:23:51 - Congratulations!\n\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac Want to learn more? \ud83d\ude80  \u25ac\u25ac\u25ac\u25ac\u25ac\u25ac \nFull Python course                                            \u25ba  https://youtu.be/t8pPdKYpowI\nFull Docker course                                            \u25ba  https://youtu.be/3c-iBn73dDE\nFull K8s course                                                  \u25ba  https://youtu.be/X48VuDVv0do\nDevOps Tools explained                                   \u25ba  https://bit.ly/2W9UEq6\n\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac Connect with me \ud83d\udc4b   \u25ac\u25ac\u25ac\u25ac\u25ac\u25ac \nINSTAGRAM             \u25ba  https://bit.ly/2F3LXYJ\nTWITTER                   \u25ba  https://bit.ly/3i54PUB\nLINKEDIN                  \u25ba  https://bit.ly/3hWOLVT\nFB group                   \u25ba  https://bit.ly/32UVSZP\nDEV                            \u25ba  https://bit.ly/3h2fqiO\n\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac Courses & Bootcamp & Ebooks \ud83d\ude80      \u25ac\u25ac\u25ac\u25ac\u25ac\u25ac \n\u25ba Become a DevOps Engineer - full educational program             \ud83d\udc49\ud83c\udffc   https://bit.ly/45mXaer\n\u25ba High-Quality and Hands-On Courses                                             \ud83d\udc49\ud83c\udffc   https://bit.ly/3BNS8Kv\n\u25ba Kubernetes 101 - compact and easy-to-read ebook bundle      \ud83d\udc49\ud83c\udffc   https://bit.ly/3Ozl28x Published at 2021-12-20T15:05:11Z"
            },
            "page_content": "  \u25ba  https://gitlab.com/nanuchi/go-full-course-youtube\nCourse Waitlist - Sign up to get notified:     \u25ba  https://www.techworld-with-nana.com/course-roadmap\n\n\n\u25ba  This video is sponsored by Kasten \ud83d\ude4c\ud83c\udffc\n\u25ba  Free Kubernetes Backup and Migration - Download Kasten's K10 and Get 10 nodes free forever: https://www.kasten.io/nana\n\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac T I M E S T A M P S \u23f0  \u25ac\u25ac\u25ac\u25ac\u25ac\u25ac\n0:00     - Intro & Course Overview\nINTRODUCTION TO GO\n02:47    - What is Go? Why Go? How it's different?\n06:50    - Characteristics of Go and Go Use Cases\nGO SYNTAX & CONCEPTS\n08:59    - Local Setup - Install Go & Editor\n12:54    - Write our First Program & Structure of a Go File\n22:02    - Variables & Constants in Go\n30:43    - Formatted Output - printf \n33:43    - Data Types in Go\n45:18    - Getting User Input\n47:19    - What is a Pointer?\n53:55    - Book Ticket Logic\n57:16    - Arrays & Slices\n1:11:12 - Loops in Go\n1:24:24 - Conditionals (if / else) and Boolean Data Type\n1:39:33 - Validate User Input\n1:54:02 - Switch Statement\n1:5",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "https://www.youtube.com/watch?v=oZTdT8MQexk"
            },
            "page_content": "How to Play Go: Rules Explained | Beginner Tutorial on Go Game, Baduk, Weiqi If you\u2019d like to know how to play Go, and if you want to understand the rules of Go game, then you\u2019ll be well on your way after this lesson. What is Go? What\u2019s the game objective? What does the game look like? All of these questions are answered here.\n#GoGame #Baduk #Weiqi #Igo #Chess #Shogi #BoardGame #MindGame #MindSport #TraditionalGame #AncientGame #StrategyGame #ChineseGame #JapaneseGame #GoRules #HowtoPlayGo #howtoplay #AlphaGo #LearntoPlayGo #GoBasics #GoBeginner #Goban #Atari #GoMagic #GoLessons #Learning\n\nThis lesson is part of a free Go introduction course on https://gomagic.org\nIf you want to learn how to play Go, we recommend you to take the course there with interactive questions and practical quizzes.\n\nNext lesson: https://youtu.be/wzXlYd6DnB0\nGo Rules playlist: https://youtube.com/playlist?list=PL4DLlaT_bvDG5y6WSfXU8cQsTsb4o3YnT\n\nGo Magic \u2014 A modern platform for learning Go\n\ud83c\udf10 https://gomagic.org",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "Golang Tutorial for Beginners | Full Go Course Full Golang Tutorial to learn the Go Programming Language while building a simple CLI application \n\nIn this full Golang course you will learn about one of the youngest programming languages that is becoming more and more popular in the cloud engineering world, which is Go or also commonly known as Golang. \nYou will learn everything you need to get started with Go and start using it in your projects. We're going to write a very simple CLI application to learn the basics of Go. So instead of learning the concepts and syntax of Go with isolated examples, you will learn them while building an actual application throughout the tutorial.\n\nBefore diving right into the syntax you will first understand why Go was even developed, its use cases or what Golang is used for and how Go is different from other programming languages.\n\n#golang #techworldwithnana\n\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac  L I N K S  \ud83d\udd17\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac \nGit Repo:                                                           \u25ba  https://gitlab.com/nanuchi/go-full-course-youtube\nCourse Waitlist - Sign up to get notified:     \u25ba  https://www.techworld-with-nana.com/course-roadmap\n\n\n\u25ba  This video is sponsored by Kasten \ud83d\ude4c\ud83c\udffc\n\u25ba  Free Kubernetes Backup and Migration - Download Kasten's K10 and Get 10 nodes free forever: https://www.kasten.io/nana\n\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac T I M E S T A M P S \u23f0  \u25ac\u25ac\u25ac\u25ac\u25ac\u25ac\n0:00     - Intro & Course Overview\nINTRODUCTION TO GO\n02:47    - What is Go? Why Go? How it's different?\n06:50    - Characteristics of Go and Go Use Cases\nGO SYNTAX & CONCEPTS\n08:59    - Local Setup - Install Go & Editor\n12:54    - Write our First Program & Structure of a Go File\n22:02    - Variables & Constants in Go\n30:43    - Formatted Output - printf \n33:43    - Data Types in Go\n45:18    - Getting User Input\n47:19    - What is a Pointer?\n53:55    - Book Ticket Logic\n57:16    - Arrays & Slices\n1:11:12 - Loops in Go\n1:24:24 - Conditionals (if / else) and Boolean Data Type\n1:39:33 - Validate User Input\n1:54:02 - Switch Statement\n1:58:37 - Encapsulate Logic with Functions\n2:22:36 - Organize Code with Go Packages\n2:35:39 - Scope Rules in Go\n2:37:16 - Maps\n2:53:20 - Structs\n3:02:15 - Goroutines - Concurrency in Go\n3:23:51 - Congratulations!\n\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac Want to learn more? \ud83d\ude80  \u25ac\u25ac\u25ac\u25ac\u25ac\u25ac \nFull Python course                                            \u25ba  https://youtu.be/t8pPdKYpowI\nFull Docker course                                            \u25ba  https://youtu.be/3c-iBn73dDE\nFull K8s course                                                  \u25ba  https://youtu.be/X48VuDVv0do\nDevOps Tools explained                                   \u25ba  https://bit.ly/2W9UEq6\n\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac Connect with me \ud83d\udc4b   \u25ac\u25ac\u25ac\u25ac\u25ac\u25ac \nINSTAGRAM             \u25ba  https://bit.ly/2F3LXYJ\nTWITTER                   \u25ba  https://bit.ly/3i54PUB\nLINKEDIN                  \u25ba  https://bit.ly/3hWOLVT\nFB group                   \u25ba  https://bit.ly/32UVSZP\nDEV                            \u25ba  https://bit.ly/3h2fqiO\n\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac Courses & Bootcamp & Ebooks \ud83d\ude80      \u25ac\u25ac\u25ac\u25ac\u25ac\u25ac \n\u25ba Become a DevOps Engineer - full educational program             \ud83d\udc49\ud83c\udffc   https://bit.ly/45mXaer\n\u25ba High-Quality and Hands-On Courses                                             \ud83d\udc49\ud83c\udffc   https://bit.ly/3BNS8Kv\n\u25ba Kubernetes 101 - compact and easy-to-read ebook bundle      \ud83d\udc49\ud83c\udffc   https://bit.ly/3Ozl28x Published at 2021-12-20T15:05:11Z"
            },
            "page_content": "Golang Tutorial for Beginners | Full Go Course Full Golang Tutorial to learn the Go Programming Language while building a simple CLI application \n\nIn this full Golang course you will learn about one of the youngest programming languages that is becoming more and more popular in the cloud engineering world, which is Go or also commonly known as Golang. \nYou will learn everything you need to get started with Go and start using it in your projects. We're going to write a very simple CLI application to learn the basics of Go. So instead of learning the concepts and syntax of Go with isolated examples, you will learn them while building an actual application throughout the tutorial.\n\nBefore diving right into the syntax you will first understand why Go was even developed, its use cases or what Golang is used for and how Go is different from other programming languages.\n\n#golang #techworldwithnana\n\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac  L I N K S  \ud83d\udd17\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac \nGit Repo:                                                         ",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "Go in 100 Seconds Learn the basics of the Go Programming Language. Go (not Golang) was developed at Google as a modern version of C for high-performance server-side applications. https://fireship.io/lessons/learn-go-in-100-lines/\n\n#programming #go #100SecondsOfCode\n\n\ud83d\udd17 Resources\n\nGo in 100 Lines https://fireship.io/lessons/learn-go-in-100-lines/\nGo Docs https://golang.org/doc/\n\n\ud83d\udd25 Get More Content - Upgrade to PRO\n\nUpgrade to Fireship PRO at https://fireship.io/pro\nUse code lORhwXd2 for 25% off your first payment. \n\n\ud83c\udfa8 My Editor Settings\n\n- Atom One Dark \n- vscode-icons\n- Fira Code Font\n\n\ud83d\udd16 Topics Covered\n\n- History of Go Development\n- Programming Languages Invented by Ken Thompson \n- Statically-typed Complied Languages\n- Go Modules Published at 2021-10-07T15:49:35Z"
            },
            "page_content": "Go in 100 Seconds Learn the basics of the Go Programming Language. Go (not Golang) was developed at Google as a modern version of C for high-performance server-side applications. https://fireship.io/lessons/learn-go-in-100-lines/\n\n#programming #go #100SecondsOfCode\n\n\ud83d\udd17 Resources\n\nGo in 100 Lines https://fireship.io/lessons/learn-go-in-100-lines/\nGo Docs https://golang.org/doc/\n\n\ud83d\udd25 Get More Content - Upgrade to PRO\n\nUpgrade to Fireship PRO at https://fireship.io/pro\nUse code lORhwXd2 for 25% off your first payment. \n\n\ud83c\udfa8 My Editor Settings\n\n- Atom One Dark \n- vscode-icons\n- Fira Code Font\n\n\ud83d\udd16 Topics Covered\n\n- History of Go Development\n- Programming Languages Invented by Ken Thompson \n- Statically-typed Complied Languages\n- Go Modules Published at 2021-10-07T15:49:35Z",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "https://www.youtube.com/watch?v=30LWjhZzg50"
            },
            "page_content": "ndreds of articles on programming: https://freecodecamp.org/news",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "https://www.youtube.com/watch?v=P6y0R3XzWlc"
            },
            "page_content": "als/html5\nPHP \u2b50\ufe0f  https://studyopedia.com/tutorials/php\nWordPress \u2b50\ufe0f https://studyopedia.com/tutorials/wordpress\nDrupal \u2b50\ufe0f https://studyopedia.com/tutorials/drupal\nMagento \u2b50\ufe0f https://studyopedia.com/tutorials/magento\nComputer Networks \u2b50\ufe0f https://studyopedia.com/tutorials/computer-networks/\nBootstrap\u2b50\ufe0f https://studyopedia.com/tutorials/bootstrap/\n\n\u25ba  Free Interview QA\nPython\ud83d\udd25https://studyopedia.com/java/java-interview-questions-and-answers\nJava \ud83d\udd25https://studyopedia.com/python3/python-multiple-choice-questions/\nAndroid\ud83d\udd25https://studyopedia.com/android/android-interview-questions/\nReactJS\ud83d\udd25https://studyopedia.com/reactjs/react-interview-questions\nBootstrap \ud83d\udd25https://studyopedia.com/bootstrap/bootstrap-interview-questions\nSQL \ud83d\udd25https://studyopedia.com/sql/sql-interview-questions\nMongoDB \ud83d\udd25https://studyopedia.com/mongodb/mongodb-interview-questions\nMySQL \ud83d\udd25https://studyopedia.com/mysql/mysql-interview-questions\n\n\u25ba Attempt Quizzes\nAndroid Quiz\ud83d\udd25 https://studyopedia.com/android/android-online-quiz/\n",
            "type": "Document"
        },
        {
            "id": null,
            "metadata": {
                "source": "Java (Quarkus) vs. Go (Golang): Performance Benchmark in Kubernetes \ud83d\udd34 - To support my channel, I\u2019d like to offer Mentorship/On-the-Job Support/Consulting - me@antonputra.com\n\n\ud83d\udc49  [Playlist] Performance Benchmarks: https://www.youtube.com/playlist?list=PLiMWaCMwGJXl-h2RgOSpdO-pQaSRwlVjd\n\n\u25ac\u25ac\u25ac\u25ac\u25ac Experience & Location \ud83d\udcbc \u25ac\u25ac\u25ac\u25ac\u25ac\n\u25ba  I\u2019m a Senior Software Engineer at Juniper Networks (12+ years of experience)\n\u25ba  Located in San Francisco Bay Area, CA (US citizen)\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac Connect with me \ud83d\udc4b \u25ac\u25ac\u25ac\u25ac\u25ac\u25ac\n\u25ba  LinkedIn: https://www.linkedin.com/in/anton-putra\n\u25ba  Twitter/X: https://twitter.com/antonvputra\n\u25ba  GitHub: https://github.com/antonputra\n\u25ba  Email: me@antonputra.com\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac Related videos \ud83d\udc68\u200d\ud83c\udfeb \u25ac\u25ac\u25ac\u25ac\u25ac\u25ac\n\ud83d\udc49  [Playlist] Kubernetes Tutorials: https://www.youtube.com/playlist?list=PLiMWaCMwGJXnHmccp2xlBENZ1xr4FpjXF\n\ud83d\udc49  [Playlist] Terraform Tutorials: https://www.youtube.com/playlist?list=PLiMWaCMwGJXmJdmfJjG3aK1IkU7oWvxIj\n\ud83d\udc49  [Playlist] Network Tutorials: https://www.youtube.com/playlist?list=PLiMWaCMwGJXluySjXqWG6fg1H1hzd-zWz\n\ud83d\udc49  [Playlist] Apache Kafka Tutorials: https://www.youtube.com/playlist?list=PLiMWaCMwGJXlL8-E-xu8RBwyC5YfS3V5e\n\ud83d\udc49  [Playlist] Performance Benchmarks: https://www.youtube.com/playlist?list=PLiMWaCMwGJXl-h2RgOSpdO-pQaSRwlVjd\n\ud83d\udc49  [Playlist] Database Tutorials: https://www.youtube.com/playlist?list=PLiMWaCMwGJXnhmmh5pu9sdWekdRwAzV5f\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac Timestamps \u23f0  \u25ac\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac\n0:00 Intro\n0:48 Java Quarkus Overview\n1:38 Golang Overview\n1:59 What is a Percentile?\n3:42 1st Test Diagram\n4:53 2nd Test Diagram\n5:59 Image Size\n9:35 Startup time\n11:23 1st Test\n13:37 2nd Test\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac Source Code \ud83d\udcda \u25ac\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac\n\u25ba  GitHub: https://github.com/antonputra/tutorials/tree/main/lessons/201\n\n#Java #Golang #Kubernetes Published at 2024-08-17T09:25:21Z"
            },
            "page_content": "Java (Quarkus) vs. Go (Golang): Performance Benchmark in Kubernetes \ud83d\udd34 - To support my channel, I\u2019d like to offer Mentorship/On-the-Job Support/Consulting - me@antonputra.com\n\n\ud83d\udc49  [Playlist] Performance Benchmarks: https://www.youtube.com/playlist?list=PLiMWaCMwGJXl-h2RgOSpdO-pQaSRwlVjd\n\n\u25ac\u25ac\u25ac\u25ac\u25ac Experience & Location \ud83d\udcbc \u25ac\u25ac\u25ac\u25ac\u25ac\n\u25ba  I\u2019m a Senior Software Engineer at Juniper Networks (12+ years of experience)\n\u25ba  Located in San Francisco Bay Area, CA (US citizen)\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac Connect with me \ud83d\udc4b \u25ac\u25ac\u25ac\u25ac\u25ac\u25ac\n\u25ba  LinkedIn: https://www.linkedin.com/in/anton-putra\n\u25ba  Twitter/X: https://twitter.com/antonvputra\n\u25ba  GitHub: https://github.com/antonputra\n\u25ba  Email: me@antonputra.com\n\n\u25ac\u25ac\u25ac\u25ac\u25ac\u25ac Related videos \ud83d\udc68\u200d\ud83c\udfeb \u25ac\u25ac\u25ac\u25ac\u25ac\u25ac\n\ud83d\udc49  [Playlist] Kubernetes Tutorials: https://www.youtube.com/playlist?list=PLiMWaCMwGJXnHmccp2xlBENZ1xr4FpjXF\n\ud83d\udc49  [Playlist] Terraform Tutorials: https://www.youtube.com/playlist?list=PLiMWaCMwGJXmJdmfJjG3aK1IkU7oWvxIj\n\ud83d\udc49  [Playlist] Network Tutorials: https://www.youtube.com/playlist?list=PLiMWaCMwGJXluySjXqW",
            "type": "Document"
        }
    ],
    "path": "\n    1. [1]. Introduction to Golang: An open-source programming language developed by Google. - Go in 100 Lines: https://fireship.io/lessons/learn-go-in-100-lines/\n    2. [2]. Why write Go?: Faster development, simpler syntax, built-in testing, and more. - Go Docs: https://golang.org/doc/\n    3. [3]. Go syntax and concepts: Understanding Go's syntax and concepts like functions, variables, and control structures. - Go Docs: https://golang.org/doc/\n    4. [4]. Local setup - Install Go & Editor: Installing Go and setting up an editor for development. - Go Docs: https://golang.org/doc/\n    5. [5]. Write first program and structure of a Go file: Creating your first Go program and understanding the structure of a Go file. - Go in 100 Lines: https://fireship.io/lessons/learn-go-in-100-lines/\n    6. [6]. Variables and constants in Go: Declaring and using variables and constants in Go. - Go Docs: https://golang.org/doc/\n    7. [7]. Formatted output - printf: Using the printf function to format output in Go. - Go Docs: https://golang.org/doc/\n    8. [8]. Data types in Go: Understanding the various data types in Go and how to use them. - Go Docs: https://golang.org/doc/\n    9. [9]. Getting user input: Reading user input in Go using the bufio package. - Go Docs: https://golang.org/doc/\n    10. [10]. Pointers: Understanding pointers and how they are used in Go. - Go Docs: https://golang.org/doc/\n    11. [11]. Arrays and slices: Declaring and using arrays and slices in Go. - Go Docs: https://golang.org/doc/\n    12. [12]. Loops in Go: Using for and for-range loops in Go. - Go Docs: https",
    "topics": " Based on the context provided, the following topics related to Go have been discussed:\n\n1. Introduction to Golang\n2. Why write Go?\n3. Go syntax and concepts\n4. Local setup - Install Go & Editor\n5. Write first program and structure of a Go file\n6. Variables and constants in Go\n7. Formatted output - printf\n8. Data types in Go\n9. Getting user input\n10. Pointers\n11. Arrays and slices\n12. Loops in Go\n13. Conditionals (if / else) and Boolean data type\n14. Validate user input\n15. Switch statement\n16. History of Go development\n17. Statically-typed compiled languages\n18. Go Modules\n\nThe following resources were mentioned and can be used for further learning:\n\n1. Go in 100 Lines: https://fireship.io/lessons/learn-go-in-100-lines/\n2. Go Docs: https://golang.org/doc/\n3. Go Magic: https://gomagic.org\n4. Go in 100 Seconds: https://fireship.io/lessons/learn-go-in-100-lines/\n5. Go Docs: https://golang.org/doc/\n6. Go in 100 Lines: https://fireship.io/lessons/learn-go-in-100-lines/\n7. FreeCodeCamp articles on programming: https://freecodecamp.org/news\n8. Studyopedia tutorials: https://studyopedia.com/tutorials/\n9. Python interview questions and answers: https://studyopedia.com/java/java-interview-questions-and-answers\n10. Java interview questions and answers: https://studyopedia.com/python3/python-multiple-choice-questions/\n11. Android interview questions: https://studyopedia.com/android/android-interview-questions/\n12. ReactJS interview questions: https://studyopedia.com/reactjs/react-interview-questions\n13. Bootstrap interview questions: https://studyopedia"
}